name: Full CICD - Destroy → Apply → Deploy

on:
  push:
    branches: [ staging ]

env:
  AWS_REGION: us-east-2
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_mysqluser: ${{ secrets.MYSQL_USER }}
  TF_VAR_mysqlpasswd: ${{ secrets.MYSQL_PASSWD }}

jobs:
  full-cicd:
    runs-on: ubuntu-latest

    steps:
      - name: ⚪ Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.3

      - name: 💣 Destroy All Terraform Resources
        run: bash scripts/terraform-destroy.sh

      - name: ⚙️ Apply All Terraform Resources
        run: bash scripts/terraform-apply.sh

      - name: 🐳 Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: 🐳 Build Docker image
        run: docker build -t minipro3-server .

      - name: 🐳 Tag Docker image
        run: docker tag minipro3-server ${{ steps.login-ecr.outputs.registry }}/cicd-ecr:latest

      - name: ☁️ Push Docker image to ECR
        run: docker push ${{ steps.login-ecr.outputs.registry }}/cicd-ecr:latest

      - name: 🧱 Prepare Deployment Bundle
        run: |
          mkdir -p deploy-files
          cp appspec.yml docker-compose.yml Dockerfile -t deploy-files
          cp index.html -t deploy-files
          cp -r scripts deploy-files
          tar -czvf $GITHUB_SHA.tar.gz -C deploy-files .

      - name: ☁️ Upload to S3
        run: aws s3 cp ./$GITHUB_SHA.tar.gz s3://service-bucket-2000-0903-0909/$GITHUB_SHA.tar.gz

      - name: 🚀 Deploy via CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name minipro3-codedeploy-app \
            --deployment-group-name minipro3-codedeploy-group \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --s3-location "bucket=service-bucket-2000-0903-0909,bundleType=tgz,key=$GITHUB_SHA.tar.gz" \
            --region us-east-2